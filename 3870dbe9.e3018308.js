(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{109:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return O}));var r=a(0),n=a.n(r);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var m=n.a.createContext({}),p=function(e){var t=n.a.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},l=function(e){var t=p(e.components);return n.a.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),l=p(a),d=r,O=l["".concat(b,".").concat(d)]||l[d]||s[d]||c;return a?n.a.createElement(O,i(i({ref:t},m),{},{components:a})):n.a.createElement(O,i({ref:t},m))}));function O(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=a.length,b=new Array(c);b[0]=d;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,b[1]=i;for(var m=2;m<c;m++)b[m]=a[m];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},78:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return o})),a.d(t,"default",(function(){return p}));var r=a(3),n=a(7),c=(a(0),a(109)),b={id:"camera",title:"Module: Camera",sidebar_label:"Camera",custom_edit_url:null,hide_title:!0},i={unversionedId:"api/modules/camera",id:"api/modules/camera",isDocsHomePage:!1,title:"Module: Camera",description:"Module: Camera",source:"@site/docs/api/modules/camera.md",slug:"/api/modules/camera",permalink:"/react-native-vision-camera/docs/api/modules/camera",editUrl:null,version:"current",sidebar_label:"Camera",sidebar:"someSidebar",previous:{title:"react-native-vision-camera",permalink:"/react-native-vision-camera/docs/api"},next:{title:"Module: CameraCodec",permalink:"/react-native-vision-camera/docs/api/modules/cameracodec"}},o=[{value:"Table of contents",id:"table-of-contents",children:[{value:"Classes",id:"classes",children:[]}]},{value:"Type aliases",id:"type-aliases",children:[{value:"CameraDeviceProps",id:"cameradeviceprops",children:[]},{value:"CameraDynamicProps",id:"cameradynamicprops",children:[]},{value:"CameraEventProps",id:"cameraeventprops",children:[]},{value:"CameraPermissionRequestResult",id:"camerapermissionrequestresult",children:[]},{value:"CameraPermissionStatus",id:"camerapermissionstatus",children:[]},{value:"CameraProps",id:"cameraprops",children:[]},{value:"CameraScannerProps",id:"camerascannerprops",children:[]}]}],m={toc:o};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},m,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"module-camera"},"Module: Camera"),Object(c.b)("h2",{id:"table-of-contents"},"Table of contents"),Object(c.b)("h3",{id:"classes"},"Classes"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",{parentName:"li",href:"/react-native-vision-camera/docs/api/classes/camera.camera-1"},"Camera"))),Object(c.b)("h2",{id:"type-aliases"},"Type aliases"),Object(c.b)("h3",{id:"cameradeviceprops"},"CameraDeviceProps"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraDeviceProps"),": ",Object(c.b)("em",{parentName:"p"},"object")),Object(c.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"device")),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#cameradevice"},Object(c.b)("em",{parentName:"a"},"CameraDevice"))),Object(c.b)("td",{parentName:"tr",align:"left"},"The Camera Device to use")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"enableDepthData"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:"left"},"Also captures data from depth-perception sensors. (e.g. disparity maps)  ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"enableHighResolutionCapture"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:"left"},"Indicates whether the photo render pipeline should be configured to deliver high resolution still images  ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"enablePortraitEffectsMatteDelivery"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:"left"},"A boolean specifying whether the photo render pipeline is prepared for portrait effects matte delivery.  When enabling this, you must also set ",Object(c.b)("inlineCode",{parentName:"td"},"enableDepthData")," to ",Object(c.b)("inlineCode",{parentName:"td"},"true"),".   ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"platform"))," iOS 12.0+  ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false")))),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L73"},"src/Camera.tsx:73")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"cameradynamicprops"},"CameraDynamicProps"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraDynamicProps"),": ",Object(c.b)("em",{parentName:"p"},"object")),Object(c.b)("h4",{id:"type-declaration-1"},"Type declaration:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"enableZoomGesture"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:"left"},"Enables or disables the pinch to zoom gesture  ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," false")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"isActive")),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"boolean")),Object(c.b)("td",{parentName:"tr",align:"left"},"Whether the Camera should actively stream video frames, or not.  This can be compared to a Video component, where ",Object(c.b)("inlineCode",{parentName:"td"},"isActive")," specifies whether the video is paused or not.  > Note: If you fully unmount the ",Object(c.b)("inlineCode",{parentName:"td"},"<Camera>")," component instead of using ",Object(c.b)("inlineCode",{parentName:"td"},"isActive={false}"),", the Camera will take a bit longer to start again. In return, it will use less resources since the Camera will be completely destroyed when unmounted.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"torch"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"off")," ","|"," ",Object(c.b)("em",{parentName:"td"},"on")),Object(c.b)("td",{parentName:"tr",align:"left"},"Set the current torch mode.  Note: The torch is only available on ",Object(c.b)("inlineCode",{parentName:"td"},'"back"')," cameras, and isn't supported by every phone.   ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default")),' "off"')),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"zoom"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("em",{parentName:"td"},"number")),Object(c.b)("td",{parentName:"tr",align:"left"},"Specifies the zoom factor of the current camera, in percent. (",Object(c.b)("inlineCode",{parentName:"td"},"0.0")," - ",Object(c.b)("inlineCode",{parentName:"td"},"1.0"),")  ",Object(c.b)("strong",{parentName:"td"},Object(c.b)("inlineCode",{parentName:"strong"},"default"))," 0.0")))),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L102"},"src/Camera.tsx:102")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"cameraeventprops"},"CameraEventProps"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraEventProps"),": ",Object(c.b)("em",{parentName:"p"},"object")),Object(c.b)("h4",{id:"type-declaration-2"},"Type declaration:"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:"left"},"Name"),Object(c.b)("th",{parentName:"tr",align:"left"},"Type"),Object(c.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"onError"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},"(",Object(c.b)("inlineCode",{parentName:"td"},"error"),": ",Object(c.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/classes/cameraerror.cameraruntimeerror"},Object(c.b)("em",{parentName:"a"},"CameraRuntimeError")),") => ",Object(c.b)("em",{parentName:"td"},"void")),Object(c.b)("td",{parentName:"tr",align:"left"},"Called when any kind of runtime error occured.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:"left"},Object(c.b)("inlineCode",{parentName:"td"},"onInitialized"),"?"),Object(c.b)("td",{parentName:"tr",align:"left"},"() => ",Object(c.b)("em",{parentName:"td"},"void")),Object(c.b)("td",{parentName:"tr",align:"left"},"Called when the camera was successfully initialized.")))),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L133"},"src/Camera.tsx:133")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"camerapermissionrequestresult"},"CameraPermissionRequestResult"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraPermissionRequestResult"),": ",Object(c.b)("em",{parentName:"p"},"authorized")," ","|"," ",Object(c.b)("em",{parentName:"p"},"denied")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L152"},"src/Camera.tsx:152")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"camerapermissionstatus"},"CameraPermissionStatus"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraPermissionStatus"),": ",Object(c.b)("em",{parentName:"p"},"authorized")," ","|"," ",Object(c.b)("em",{parentName:"p"},"not-determined")," ","|"," ",Object(c.b)("em",{parentName:"p"},"denied")," ","|"," ",Object(c.b)("em",{parentName:"p"},"restricted")),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L151"},"src/Camera.tsx:151")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"cameraprops"},"CameraProps"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraProps"),": CameraPresetProps ","|"," CameraFormatProps & CameraScannerPropsNever ","|"," ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camera#camerascannerprops"},Object(c.b)("em",{parentName:"a"},"CameraScannerProps"))," & ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camera#cameradeviceprops"},Object(c.b)("em",{parentName:"a"},"CameraDeviceProps"))," & ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camera#cameradynamicprops"},Object(c.b)("em",{parentName:"a"},"CameraDynamicProps"))," & ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/camera#cameraeventprops"},Object(c.b)("em",{parentName:"a"},"CameraEventProps"))," & ViewProps"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L144"},"src/Camera.tsx:144")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"camerascannerprops"},"CameraScannerProps"),Object(c.b)("p",null,"\u01ac ",Object(c.b)("strong",{parentName:"p"},"CameraScannerProps"),": ",Object(c.b)("em",{parentName:"p"},"Modify"),"<CameraScannerPropsNever, { ",Object(c.b)("inlineCode",{parentName:"p"},"onCodeScanned"),": (",Object(c.b)("inlineCode",{parentName:"p"},"codes"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/code#code"},Object(c.b)("em",{parentName:"a"},"Code")),"[]) => ",Object(c.b)("em",{parentName:"p"},"void")," ; ",Object(c.b)("inlineCode",{parentName:"p"},"scannableCodes"),": ",Object(c.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/code#codetype"},Object(c.b)("em",{parentName:"a"},"CodeType")),"[]  }",">"),Object(c.b)("p",null,"Defined in: ",Object(c.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/8abeef4/src/Camera.tsx#L65"},"src/Camera.tsx:65")))}p.isMDXComponent=!0}}]);