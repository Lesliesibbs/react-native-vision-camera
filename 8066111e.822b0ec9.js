(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{109:function(e,t,a){"use strict";a.d(t,"a",(function(){return d})),a.d(t,"b",(function(){return j}));var n=a(0),b=a.n(n);function m(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){m(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},m=Object.keys(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(n=0;n<m.length;n++)a=m[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var o=b.a.createContext({}),c=function(e){var t=b.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return b.a.createElement(o.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=b.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,m=e.originalType,r=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),d=c(a),O=n,j=d["".concat(r,".").concat(O)]||d[O]||l[O]||m;return a?b.a.createElement(j,i(i({ref:t},o),{},{components:a})):b.a.createElement(j,i({ref:t},o))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var m=a.length,r=new Array(m);r[0]=O;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,r[1]=i;for(var o=2;o<m;o++)r[o]=a[o];return b.a.createElement.apply(null,r)}return b.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},88:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return c}));var n=a(3),b=a(7),m=(a(0),a(109)),r={id:"utils_formatfilter",title:"Module: utils/FormatFilter",sidebar_label:"utils/FormatFilter",custom_edit_url:null,hide_title:!0},i={unversionedId:"api/modules/utils_formatfilter",id:"api/modules/utils_formatfilter",isDocsHomePage:!1,title:"Module: utils/FormatFilter",description:"Module: utils/FormatFilter",source:"@site/docs/api/modules/utils_formatfilter.md",slug:"/api/modules/utils_formatfilter",permalink:"/react-native-vision-camera/docs/api/modules/utils_formatfilter",editUrl:null,version:"current",sidebar_label:"utils/FormatFilter",sidebar:"someSidebar",previous:{title:"Module: hooks/useCameraFormat",permalink:"/react-native-vision-camera/docs/api/modules/hooks_usecameraformat"},next:{title:"Class: Camera",permalink:"/react-native-vision-camera/docs/api/classes/camera.camera-1"}},p=[{value:"Type aliases",id:"type-aliases",children:[{value:"Size",id:"size",children:[]}]},{value:"Functions",id:"functions",children:[{value:"filterFormatsByAspectRatio",id:"filterformatsbyaspectratio",children:[]},{value:"frameRateIncluded",id:"framerateincluded",children:[]},{value:"sortDevices",id:"sortdevices",children:[]},{value:"sortFormatsByResolution",id:"sortformatsbyresolution",children:[]}]}],o={toc:p};function c(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(m.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(m.b)("h1",{id:"module-utilsformatfilter"},"Module: utils/FormatFilter"),Object(m.b)("h2",{id:"type-aliases"},"Type aliases"),Object(m.b)("h3",{id:"size"},"Size"),Object(m.b)("p",null,"\u01ac ",Object(m.b)("strong",{parentName:"p"},"Size"),": ",Object(m.b)("em",{parentName:"p"},"object")),Object(m.b)("p",null,"Represents a Size in any unit."),Object(m.b)("h4",{id:"type-declaration"},"Type declaration:"),Object(m.b)("table",null,Object(m.b)("thead",{parentName:"table"},Object(m.b)("tr",{parentName:"thead"},Object(m.b)("th",{parentName:"tr",align:"left"},"Name"),Object(m.b)("th",{parentName:"tr",align:"left"},"Type"),Object(m.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(m.b)("tbody",{parentName:"table"},Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"height")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"number")),Object(m.b)("td",{parentName:"tr",align:"left"},"Points in height.")),Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"width")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"number")),Object(m.b)("td",{parentName:"tr",align:"left"},"Points in width.")))),Object(m.b)("p",null,"Defined in: ",Object(m.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/0709711/src/utils/FormatFilter.ts#L36"},"src/utils/FormatFilter.ts:36")),Object(m.b)("h2",{id:"functions"},"Functions"),Object(m.b)("h3",{id:"filterformatsbyaspectratio"},"filterFormatsByAspectRatio"),Object(m.b)("p",null,"\u25b8 ",Object(m.b)("inlineCode",{parentName:"p"},"Const"),Object(m.b)("strong",{parentName:"p"},"filterFormatsByAspectRatio"),"(",Object(m.b)("inlineCode",{parentName:"p"},"formats"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[], ",Object(m.b)("inlineCode",{parentName:"p"},"viewSize?"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/utils_formatfilter#size"},Object(m.b)("em",{parentName:"a"},"Size")),"): ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[]"),Object(m.b)("p",null,"Filters Camera Device Formats by the best matching aspect ratio for the given ",Object(m.b)("inlineCode",{parentName:"p"},"viewSize"),"."),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => filterFormatsByAspectRatio(device.formats, CAMERA_VIEW_SIZE), [device.formats])\n")),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"method"))," "),Object(m.b)("h4",{id:"parameters"},"Parameters:"),Object(m.b)("table",null,Object(m.b)("thead",{parentName:"table"},Object(m.b)("tr",{parentName:"thead"},Object(m.b)("th",{parentName:"tr",align:"left"},"Name"),Object(m.b)("th",{parentName:"tr",align:"left"},"Type"),Object(m.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(m.b)("tbody",{parentName:"table"},Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"formats")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoHeight"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoWidth"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[]"),Object(m.b)("td",{parentName:"tr",align:"left"},"A list of formats the current device has (see {@link CameraDevice.formats})")),Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"viewSize")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/utils_formatfilter#size"},Object(m.b)("em",{parentName:"a"},"Size"))),Object(m.b)("td",{parentName:"tr",align:"left"},"The size of the camera view which will be used to find the best aspect ratio. Defaults to the screen size.")))),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},"Returns:")," ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[]"),Object(m.b)("p",null,"A list of Camera Device Formats that match the given ",Object(m.b)("inlineCode",{parentName:"p"},"viewSize"),"' aspect ratio ",Object(m.b)("em",{parentName:"p"},"as close as possible"),"."),Object(m.b)("p",null,"Defined in: ",Object(m.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/0709711/src/utils/FormatFilter.ts#L92"},"src/utils/FormatFilter.ts:92")),Object(m.b)("hr",null),Object(m.b)("h3",{id:"framerateincluded"},"frameRateIncluded"),Object(m.b)("p",null,"\u25b8 ",Object(m.b)("inlineCode",{parentName:"p"},"Const"),Object(m.b)("strong",{parentName:"p"},"frameRateIncluded"),"(",Object(m.b)("inlineCode",{parentName:"p"},"range"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">",", ",Object(m.b)("inlineCode",{parentName:"p"},"fps"),": ",Object(m.b)("em",{parentName:"p"},"number"),"): ",Object(m.b)("em",{parentName:"p"},"boolean")),Object(m.b)("p",null,"Returns ",Object(m.b)("inlineCode",{parentName:"p"},"true")," if the given Frame Rate Range (",Object(m.b)("inlineCode",{parentName:"p"},"range"),") contains the given frame rate (",Object(m.b)("inlineCode",{parentName:"p"},"fps"),")"),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre",className:"language-js"},"// get all formats that support 60 FPS\nconst formatsWithHighFps = useMemo(() => device.formats.filter((f) => f.frameRateRanges.some((r) => frameRateIncluded(r, 60))), [device.formats])\n")),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"method"))," "),Object(m.b)("h4",{id:"parameters-1"},"Parameters:"),Object(m.b)("table",null,Object(m.b)("thead",{parentName:"table"},Object(m.b)("tr",{parentName:"thead"},Object(m.b)("th",{parentName:"tr",align:"left"},"Name"),Object(m.b)("th",{parentName:"tr",align:"left"},"Type"),Object(m.b)("th",{parentName:"tr",align:"left"},"Description"))),Object(m.b)("tbody",{parentName:"table"},Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"range")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">"),Object(m.b)("td",{parentName:"tr",align:"left"},"The range to check if the given ",Object(m.b)("inlineCode",{parentName:"td"},"fps")," are included in")),Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"fps")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"number")),Object(m.b)("td",{parentName:"tr",align:"left"},"The FPS to check if the given ",Object(m.b)("inlineCode",{parentName:"td"},"range")," supports.")))),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},"Returns:")," ",Object(m.b)("em",{parentName:"p"},"boolean")),Object(m.b)("p",null,"Defined in: ",Object(m.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/0709711/src/utils/FormatFilter.ts#L137"},"src/utils/FormatFilter.ts:137")),Object(m.b)("hr",null),Object(m.b)("h3",{id:"sortdevices"},"sortDevices"),Object(m.b)("p",null,"\u25b8 ",Object(m.b)("inlineCode",{parentName:"p"},"Const"),Object(m.b)("strong",{parentName:"p"},"sortDevices"),"(",Object(m.b)("inlineCode",{parentName:"p"},"left"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"devices"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#physicalcameradevicetype"},Object(m.b)("em",{parentName:"a"},"PhysicalCameraDeviceType")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"formats"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"hasFlash"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"hasTorch"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"id"),": ",Object(m.b)("em",{parentName:"p"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"isMultiCam"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"name"),": ",Object(m.b)("em",{parentName:"p"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"neutralZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"position"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameraposition#cameraposition"},Object(m.b)("em",{parentName:"a"},"CameraPosition"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsLowLightBoost"),": ",Object(m.b)("em",{parentName:"p"},"boolean"),"  }",">",", ",Object(m.b)("inlineCode",{parentName:"p"},"right"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"devices"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#physicalcameradevicetype"},Object(m.b)("em",{parentName:"a"},"PhysicalCameraDeviceType")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"formats"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"hasFlash"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"hasTorch"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"id"),": ",Object(m.b)("em",{parentName:"p"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"isMultiCam"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"name"),": ",Object(m.b)("em",{parentName:"p"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"neutralZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"position"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameraposition#cameraposition"},Object(m.b)("em",{parentName:"a"},"CameraPosition"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsLowLightBoost"),": ",Object(m.b)("em",{parentName:"p"},"boolean"),"  }",">","): ",Object(m.b)("em",{parentName:"p"},"number")),Object(m.b)("p",null,"Compares two devices by the following criteria:"),Object(m.b)("ul",null,Object(m.b)("li",{parentName:"ul"},Object(m.b)("inlineCode",{parentName:"li"},"wide-angle-camera"),"s are ranked higher than others"),Object(m.b)("li",{parentName:"ul"},'Devices with more physical cameras are ranked higher than ones with less. (e.g. "Triple Camera" > "Wide-Angle Camera")')),Object(m.b)("blockquote",null,Object(m.b)("p",{parentName:"blockquote"},"Note that this makes the ",Object(m.b)("inlineCode",{parentName:"p"},"sort()")," function descending, so the first element (",Object(m.b)("inlineCode",{parentName:"p"},"[0]"),') is the "best" device.')),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre",className:"language-js"},"const devices = camera.devices.sort(sortDevices)\nconst bestDevice = devices[0]\n")),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"method"))," "),Object(m.b)("h4",{id:"parameters-2"},"Parameters:"),Object(m.b)("table",null,Object(m.b)("thead",{parentName:"table"},Object(m.b)("tr",{parentName:"thead"},Object(m.b)("th",{parentName:"tr",align:"left"},"Name"),Object(m.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(m.b)("tbody",{parentName:"table"},Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"left")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"devices"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#physicalcameradevicetype"},Object(m.b)("em",{parentName:"a"},"PhysicalCameraDeviceType")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"formats"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoHeight"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoWidth"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"hasFlash"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"hasTorch"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"id"),": ",Object(m.b)("em",{parentName:"td"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"isMultiCam"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"name"),": ",Object(m.b)("em",{parentName:"td"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"neutralZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"position"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameraposition#cameraposition"},Object(m.b)("em",{parentName:"a"},"CameraPosition"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsLowLightBoost"),": ",Object(m.b)("em",{parentName:"td"},"boolean"),"  }",">")),Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"right")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"devices"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#physicalcameradevicetype"},Object(m.b)("em",{parentName:"a"},"PhysicalCameraDeviceType")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"formats"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoHeight"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoWidth"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"hasFlash"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"hasTorch"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"id"),": ",Object(m.b)("em",{parentName:"td"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"isMultiCam"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"name"),": ",Object(m.b)("em",{parentName:"td"},"string")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"neutralZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"position"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameraposition#cameraposition"},Object(m.b)("em",{parentName:"a"},"CameraPosition"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsLowLightBoost"),": ",Object(m.b)("em",{parentName:"td"},"boolean"),"  }",">")))),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},"Returns:")," ",Object(m.b)("em",{parentName:"p"},"number")),Object(m.b)("p",null,"Defined in: ",Object(m.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/0709711/src/utils/FormatFilter.ts#L18"},"src/utils/FormatFilter.ts:18")),Object(m.b)("hr",null),Object(m.b)("h3",{id:"sortformatsbyresolution"},"sortFormatsByResolution"),Object(m.b)("p",null,"\u25b8 ",Object(m.b)("inlineCode",{parentName:"p"},"Const"),Object(m.b)("strong",{parentName:"p"},"sortFormatsByResolution"),"(",Object(m.b)("inlineCode",{parentName:"p"},"left"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">",", ",Object(m.b)("inlineCode",{parentName:"p"},"right"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"p"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"p"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"p"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"maxZoom"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"minISO"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoHeight"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"photoWidth"),": ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"p"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"p",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"p"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"p"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"p"},"number"),"  }",">","): ",Object(m.b)("em",{parentName:"p"},"number")),Object(m.b)("p",null,"Sorts Camera Device Formats by highest photo-capture resolution, descending. Use this in a ",Object(m.b)("inlineCode",{parentName:"p"},".sort")," function."),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"example"))," "),Object(m.b)("pre",null,Object(m.b)("code",{parentName:"pre",className:"language-js"},"const formats = useMemo(() => device.formats.sort(sortFormatsByResolution), [device.formats])\nconst bestFormat = formats[0]\n")),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},Object(m.b)("inlineCode",{parentName:"strong"},"method"))," "),Object(m.b)("h4",{id:"parameters-3"},"Parameters:"),Object(m.b)("table",null,Object(m.b)("thead",{parentName:"table"},Object(m.b)("tr",{parentName:"thead"},Object(m.b)("th",{parentName:"tr",align:"left"},"Name"),Object(m.b)("th",{parentName:"tr",align:"left"},"Type"))),Object(m.b)("tbody",{parentName:"table"},Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"left")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoHeight"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoWidth"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">")),Object(m.b)("tr",{parentName:"tbody"},Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("inlineCode",{parentName:"td"},"right")),Object(m.b)("td",{parentName:"tr",align:"left"},Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"autoFocusSystem"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#autofocussystem"},Object(m.b)("em",{parentName:"a"},"AutoFocusSystem"))," ; ",Object(m.b)("inlineCode",{parentName:"td"},"colorSpaces"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#colorspace"},Object(m.b)("em",{parentName:"a"},"ColorSpace")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"fieldOfView"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"frameRateRanges"),": ",Object(m.b)("em",{parentName:"td"},"Readonly"),"<{ ",Object(m.b)("inlineCode",{parentName:"td"},"maxFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minFrameRate"),": ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">","[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"isHighestPhotoQualitySupported?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"maxZoom"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"minISO"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoHeight"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"photoWidth"),": ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsPhotoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"supportsVideoHDR"),": ",Object(m.b)("em",{parentName:"td"},"boolean")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoHeight?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number")," ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoStabilizationModes"),": ",Object(m.b)("a",{parentName:"td",href:"/react-native-vision-camera/docs/api/modules/cameradevice#videostabilizationmode"},Object(m.b)("em",{parentName:"a"},"VideoStabilizationMode")),"[] ; ",Object(m.b)("inlineCode",{parentName:"td"},"videoWidth?"),": ",Object(m.b)("em",{parentName:"td"},"undefined")," ","|"," ",Object(m.b)("em",{parentName:"td"},"number"),"  }",">")))),Object(m.b)("p",null,Object(m.b)("strong",{parentName:"p"},"Returns:")," ",Object(m.b)("em",{parentName:"p"},"number")),Object(m.b)("p",null,"Defined in: ",Object(m.b)("a",{parentName:"p",href:"https://github.com/cuvent/react-native-vision-camera/blob/0709711/src/utils/FormatFilter.ts#L112"},"src/utils/FormatFilter.ts:112")))}c.isMDXComponent=!0}}]);